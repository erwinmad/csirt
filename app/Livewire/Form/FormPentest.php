<?php

namespace App\Livewire\Form;

use App\Models\Pentest;
use App\Models\DaftarAplikasiModel;
use App\Models\User;
use Livewire\Component;

class FormPentest extends Component
{
    public $pentestId;
    public $aplikasi_id;
    public $tanggal_mulai;
    public $tanggal_selesai;
    public $metode;
    public $tingkat;
    public $scope_testing;
    public $objective;
    public $penanggung_jawab_id;
    public $status = 'Draft';
    public $kesimpulan;
    public $rekomendasi;
    public $pentest;

    protected $rules = [
        'aplikasi_id' => 'required|exists:daftar_aplikasi,id',
        'tanggal_mulai' => 'required|date',
        'tanggal_selesai' => 'required|date|after_or_equal:tanggal_mulai',
        'metode' => 'required|in:Black Box,White Box,Gray Box',
        'tingkat' => 'required|in:Low,Medium,High,Critical',
        'scope_testing' => 'required|string|min:10',
        'objective' => 'required|string|min:10',
        'penanggung_jawab_id' => 'required|exists:users,id',
        'status' => 'required|in:Draft,In Progress,Completed,Cancelled',
        'kesimpulan' => 'nullable|string',
        'rekomendasi' => 'nullable|string',
    ];

    public function mount($id = null)
    {
        if ($id) {
            $this->pentest = Pentest::findOrFail($id);
            $this->pentestId = $this->pentest->id;
            $this->aplikasi_id = $this->pentest->aplikasi_id;
            $this->tanggal_mulai = $this->pentest->tanggal_mulai;
            $this->tanggal_selesai = $this->pentest->tanggal_selesai;
            $this->metode = $this->pentest->metode;
            $this->tingkat = $this->pentest->tingkat;
            $this->scope_testing = $this->pentest->scope_testing;
            $this->objective = $this->pentest->objective;
            $this->penanggung_jawab_id = $this->pentest->penanggung_jawab_id;
            $this->status = $this->pentest->status;
            $this->kesimpulan = $this->pentest->kesimpulan;
            $this->rekomendasi = $this->pentest->rekomendasi;
        }
    }

    public function save()
    {
        $this->validate();

        $data = [
            'aplikasi_id' => $this->aplikasi_id,
            'tanggal_mulai' => $this->tanggal_mulai,
            'tanggal_selesai' => $this->tanggal_selesai,
            'metode' => $this->metode,
            'tingkat' => $this->tingkat,
            'scope_testing' => $this->scope_testing,
            'objective' => $this->objective,
            'penanggung_jawab_id' => $this->penanggung_jawab_id,
            'status' => $this->status,
            'kesimpulan' => $this->kesimpulan,
            'rekomendasi' => $this->rekomendasi,
        ];

        if ($this->pentestId) {
            $this->pentest->update($data);
            session()->flash('success', 'Data Pentest berhasil diperbarui.');
        } else {
            $pentest = Pentest::create($data);
            session()->flash('success', 'Pentest berhasil dibuat.');
            $this->pentestId = $pentest->id;
        }

        return redirect()->route('pentest-detail', ['id' => $this->pentestId]);
    }

    public function render()
    {
        return view('livewire.form.form-pentest', [
            'aplikasis' => DaftarAplikasiModel::orderBy('nama_aplikasi')->get(),
            'penanggungJawabs' => User::orderBy('name')->get(),
        ]);
    }
}