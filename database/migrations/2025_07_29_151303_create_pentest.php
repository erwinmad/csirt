<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        // Migration untuk tabel utama pentest
        Schema::create('pentests', function (Blueprint $table) {
            $table->id();
            $table->foreignId('aplikasi_id')->constrained('daftar_aplikasi')->onDelete('cascade');
            $table->date('tanggal_mulai');
            $table->date('tanggal_selesai');
            $table->enum('metode', ['Black Box', 'White Box', 'Gray Box']);
            $table->enum('tingkat', ['Low', 'Medium', 'High', 'Critical']);
            $table->text('scope_testing');
            $table->text('objective');
            $table->foreignId('penanggung_jawab_id')->constrained('users');
            $table->enum('status', ['In Progress', 'Completed', 'Cancelled']);
            $table->text('kesimpulan')->nullable();
            $table->text('rekomendasi')->nullable();
            $table->timestamps();
        });

        Schema::create('vulnerability_categories', function (Blueprint $table) {
            $table->id();
            $table->string('kode')->unique(); // Kode singkat untuk kategori
            $table->string('nama'); // Nama kategori yang ringkas
            $table->text('deskripsi')->nullable(); // Deskripsi singkat
            $table->timestamps();
        });

        // Migration untuk tabel temuan kerentanan
        Schema::create('vulnerabilities', function (Blueprint $table) {
            $table->id();
            $table->foreignId('pentest_id')->constrained()->onDelete('cascade');
            $table->string('nama_kerentanan')->nullable();
            $table->text('deskripsi');
            $table->enum('tingkat_risiko', ['Low', 'Medium', 'High', 'Critical']);
            $table->text('lokasi');
             $table->foreignId('category_id')
                  ->nullable()
                  ->constrained('vulnerability_categories')
                  ->onDelete('set null');
            $table->text('proof_of_concept')->nullable();
            $table->text('rekomendasi_perbaikan');
            $table->enum('status', ['Open', 'Fixed', 'False Positive', 'Risk Accepted']);
            $table->date('tanggal_perbaikan')->nullable();
            $table->foreignId('diperbaiki_oleh')->nullable()->constrained('users');
            $table->text('catatan_perbaikan')->nullable();
            $table->timestamps();
        });

        // Migration untuk tabel bukti pentest
        Schema::create('pentest_evidences', function (Blueprint $table) {
            $table->id();
            $table->foreignId('vulnerability_id')->constrained()->onDelete('cascade');
            $table->string('nama_file');
            $table->string('path');
            $table->string('tipe_file');
            $table->text('keterangan')->nullable();
            $table->timestamps();
        });

        // Migration untuk tabel laporan pentest
        Schema::create('pentest_reports', function (Blueprint $table) {
            $table->id();
            $table->foreignId('pentest_id')->constrained()->onDelete('cascade');
            $table->string('judul_laporan');
            $table->string('nomor_laporan');
            $table->text('executive_summary');
            $table->text('metodologi');
            $table->text('rekomendasi_keseluruhan');
            $table->string('file_laporan');
            $table->foreignId('dibuat_oleh')->constrained('users');
            $table->date('tanggal_penerbitan');
            $table->enum('klasifikasi', ['Rahasia', 'Terbatas', 'Umum']);
            $table->timestamps();
        });

        // Migration untuk tabel history pentest
        Schema::create('pentest_histories', function (Blueprint $table) {
            $table->id();
            $table->foreignId('pentest_id')->constrained()->onDelete('cascade');
            $table->foreignId('user_id')->constrained();
            $table->string('aksi');
            $table->text('deskripsi_perubahan');
            $table->json('data_sebelumnya')->nullable();
            $table->json('data_setelahnya')->nullable();
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('pentest');
    }
};
